# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.encryptkey: '31400400f1604deffe920b595e75a257c46dbdc2319a7a08b6dada4d2c50c93c036184db8152b564b30b68c349c0cc75127d524155b50b92ad94b240036cdc9d9a355d48020c162e069030badfeb75858eb22127f9e28c2177edea039a9dcbde026d831c' 
    brochures_directory: '%kernel.project_dir%/public/uploads/brochures'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Service\FileUploader:
        arguments:
            $targetDirectory: '%brochures_directory%'

    App\Event\DoctrineListener:
        tags:
            - { name: doctrine.event_listener, event: prePersist }
            - { name: doctrine.event_listener, event: preUpdate  }
            - { name: doctrine.event_listener, event: postLoad   }
